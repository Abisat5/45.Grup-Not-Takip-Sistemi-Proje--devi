{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kskna\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\not-takip-sistemi\\\\frontend\\\\src\\\\pages\\\\ExamScoresPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamScoresPage = ({\n  id\n}) => {\n  _s();\n  const [examScores, setExamScores] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!id || isNaN(id)) {\n      setMessage('Geçerli bir öğrenci ID’si bulunamadı.');\n      return;\n    }\n    const fetchExamScores = async () => {\n      setLoading(true);\n      setMessage('');\n      try {\n        const res = await axios.get(`http://localhost:8080/api/grades/student/${id}`);\n        setExamScores(res.data || []);\n        if ((res.data || []).length === 0) {\n          setMessage('Henüz sınav notunuz bulunmamaktadır.');\n        }\n      } catch (err) {\n        console.error(err);\n        if (err.response && err.response.status === 404) {\n          setMessage('Bu ID’ye ait öğrenci bulunamadı.');\n        } else {\n          setMessage('Sınav notları alınamadı.');\n        }\n        setExamScores([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExamScores();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"S\\u0131nav Notlar\\u0131n\\u0131z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), !loading && message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), !loading && examScores.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Not\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\\u0131nav T\\xFCr\\xFC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: examScores.map(score => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.lessonName || 'Bilinmiyor'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.gradeValue !== null ? score.gradeValue : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.examType || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, score.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamScoresPage, \"zDOpEacEFDTwVTkaJUqrBkujk1o=\");\n_c = ExamScoresPage;\nexport default ExamScoresPage;\nconst styles = {\n  container: {\n    maxWidth: '700px',\n    margin: '30px auto',\n    padding: '20px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: '1px solid #ddd'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ExamScoresPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExamScoresPage","id","_s","examScores","setExamScores","message","setMessage","loading","setLoading","isNaN","fetchExamScores","res","get","data","length","err","console","error","response","status","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","color","table","map","score","lessonName","gradeValue","examType","_c","maxWidth","margin","padding","fontFamily","width","borderCollapse","border","$RefreshReg$"],"sources":["C:/Users/kskna/OneDrive/Masaüstü/not-takip-sistemi/frontend/src/pages/ExamScoresPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ExamScoresPage = ({ id }) => {\r\n  const [examScores, setExamScores] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!id || isNaN(id)) {\r\n      setMessage('Geçerli bir öğrenci ID’si bulunamadı.');\r\n      return;\r\n    }\r\n\r\n    const fetchExamScores = async () => {\r\n      setLoading(true);\r\n      setMessage('');\r\n      try {\r\n        const res = await axios.get(`http://localhost:8080/api/grades/student/${id}`);\r\n        setExamScores(res.data || []);\r\n        if ((res.data || []).length === 0) {\r\n          setMessage('Henüz sınav notunuz bulunmamaktadır.');\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        if (err.response && err.response.status === 404) {\r\n          setMessage('Bu ID’ye ait öğrenci bulunamadı.');\r\n        } else {\r\n          setMessage('Sınav notları alınamadı.');\r\n        }\r\n        setExamScores([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExamScores();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1>Sınav Notlarınız</h1>\r\n\r\n      {loading && <p>Yükleniyor...</p>}\r\n\r\n      {!loading && message && <p style={{ color: 'red' }}>{message}</p>}\r\n\r\n      {!loading && examScores.length > 0 && (\r\n        <table style={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>Ders</th>\r\n              <th>Not</th>\r\n              <th>Sınav Türü</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {examScores.map((score) => (\r\n              <tr key={score.id}>\r\n                <td>{score.lessonName || 'Bilinmiyor'}</td>\r\n                <td>{score.gradeValue !== null ? score.gradeValue : '-'}</td>\r\n                <td>{score.examType || '-'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamScoresPage;\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '700px',\r\n    margin: '30px auto',\r\n    padding: '20px',\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    borderCollapse: 'collapse',\r\n    border: '1px solid #ddd',\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}